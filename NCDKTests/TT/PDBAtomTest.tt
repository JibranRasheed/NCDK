<#@ include file="..\..\ChemObjectConfig.ttinclude" #>

/* Copyright (C) 2004-2007  Miguel Rojas <miguel.rojas@uni-koeln.de>
 *
 * Contact: cdk-devel@lists.sourceforge.net
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2.1
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 */

using Microsoft.VisualStudio.TestTools.UnitTesting;
using NCDK.Numerics;

<# foreach (var ns in namespaces) { #>
namespace <#= ns.NS #>
{
    /// <summary>
    /// Checks the functionality of the <see cref="PDBAtom"/>.
    /// </summary>
    [TestClass()]
    public class PDBAtomTest : AbstractPDBAtomTest
    {
        public override IChemObject NewChemObject()
        {
            return new PDBAtom(new Element());
        }

        [TestMethod()]
        public void TestPDBAtom_IElement()
        {
            IElement element = new Element();
            IAtom a = new PDBAtom(element);
            Assert.IsNotNull(a);
        }

        [TestMethod()]
        public void TestPDBAtom_String()
        {
            IPDBAtom a = new PDBAtom("C");
            Assert.AreEqual("C", a.Symbol);
            Assert.IsNull(a.Point2D);
            Assert.IsNull(a.Point3D);
            Assert.IsNull(a.FractionalPoint3D);
        }

        [TestMethod()]
        public void TestPDBAtom_String_Point3d()
        {
            Vector3 point3d = new Vector3(1.0, 2.0, 3.0);

            IPDBAtom a = new PDBAtom("C", point3d);
            Assert.AreEqual("C", a.Symbol);
            Assert.AreEqual(point3d, a.Point3D);
            Assert.IsNull(a.Point2D);
            Assert.IsNull(a.FractionalPoint3D);
        }

<# if (ns.IsSilent) { #> 
		<#@ include file="TestAbstractChemObjectTest.ttinclude" #>
<# } #>
    }
}
<# } #>
