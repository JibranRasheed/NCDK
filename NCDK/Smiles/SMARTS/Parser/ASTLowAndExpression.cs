/* Generated By:JJTree: Do not edit this line. ASTLowAndExpression.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
namespace NCDK.Smiles.SMARTS.Parser
{

    public
    class ASTLowAndExpression : SimpleNode
    {
        public ASTLowAndExpression(int id)
          : base(id)
        {
        }

        public ASTLowAndExpression(SMARTSParser p, int id)
          : base(p, id)
        {
        }


        /// <summary>Accept the visitor. </summary>
        public override object JJTAccept(SMARTSParserVisitor visitor, object data)
        {
            return visitor.Visit(this, data);
        }

        public void InsertLeafChild(Node node)
        {
            Node firstNode = this.JJTGetChild(0);
            while (!(firstNode is ASTImplicitHighAndExpression)) {
                firstNode = firstNode.JJTGetChild(0);
            }
            ASTImplicitHighAndExpression insert = new ASTImplicitHighAndExpression(
                    SMARTSParserTreeConstants.JJTIMPLICITHIGHANDEXPRESSION);
            insert.JJTAddChild(node, 0);
            insert.JJTAddChild(firstNode.JJTGetChild(0), 1);
            firstNode.JJTRemoveChild(0);
            firstNode.JJTAddChild(insert, 0);
        }
    }
}
